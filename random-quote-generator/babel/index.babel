class Heading extends React.Component{
  render(){
    return <h2 className="heading text-center">
    {this.props.text}
    </h2>;
  }
}

class Box extends React.Component {
  render(){
    return <div className="box">
    {this.props.boxContent}
    </div>;
  }
}

class Button extends React.Component {
  render(){
    return <button type="button" className="button"
onClick={this.props.onClick}>
    {this.props.buttonText}
    </button>;
  }
}

class Footer extends React.Component {
  render(){
    return <h6  className="footer text-center">
    {this.props.footerText}
    </h6>;
  }
}

class QuoteAuthor extends React.Component {
  render() {
    return <div>
      <div>
          {this.props.quote}
      </div>
      <div className="pull-right">
        - {this.props.author}
      </div>
    </div>;
  }
}

class AppComponent extends React.Component {
  render() {
   const tweetUrl = "https://twitter.com/intent/tweet?text="+this.props.quote+" - By "+this.props.author+"&hashtags=freecodecamp,codepen,randomquotegenerator";
    
    return (
      <div className="app">
        <Heading text="Random Quote Generator" />
        
        <div className="content row col-lg-offset-2 col-md-offset-2 col-sm-offset-2 col-xs-offset-2 col-lg-8 col-md-8 col-sm-8 col-xs-8">
          
       
        
        <div className="pull-right">
        <Button buttonText="New Quote" onClick={this.props.getQuote}/>
        </div>
          
          
          <div className="pull-left">
       <a target="_blank" className="twitter-share-button"
  href={tweetUrl}>
         Tweet <i className="fa fa-twitter" aria-hidden="true"></i></a> </div>
          
        </div>
        
        
        
        
        <div className="col-lg-offset-2 col-md-offset-2 col-sm-offset-2 col-xs-offset-2 col-lg-8 col-md-8 col-sm-8 col-xs-8">
          <Box boxContent={<QuoteAuthor quote={this.props.quote} author={this.props.author}/>}/>
        </div>
        
        
        
        <Footer footerText="Written and coded by Srinidhi Srinivasa Raghavan"/>
      </div>
    );
  }
}

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      author: "",
      quote: ""
    }
    this.getQuote = this.getQuote.bind(this);
  }
  
  componentWillMount() {
     this.getQuote();
  }
 
  
  getQuote() {
        $.ajax({
      headers: {
      "X-Mashape-Key": "1jxbUQ3u28mshqPhejtRXPU2DG6qp1aEcWhjsnBiSxPFXVcA8B"
      },
      url: 'https://andruxnet-random-famous-quotes.p.mashape.com/cat=',
      type: 'get',
      dataType: 'json',
      error: (data) => {
        alert("Error in fetching quotes" + JSON.stringify(data))
      },
      success: (data) => {
        this.setState({
          author: data.author,
          quote: data.quote
        });             
          }
      });
  }
  
  render() {
    return (
      <AppComponent 
        author={this.state.author}
        quote={this.state.quote}
        getQuote = {this.getQuote}
        />
    );
  }
}

ReactDOM.render(
	<App />,
  document.getElementById('root')
);